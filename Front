import React, { useState } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "/components/ui/card";
import { Button } from "/components/ui/button";
import { Input } from "/components/ui/input";
import { Label } from "/components/ui/label";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";

const EmployeeSalaryPredictionApp = () => {
  const [formData, setFormData] = useState({
    age: '',
    gender: '',
    education_level: '',
    job_title: '',
    years_of_experience: '',
    country: '',
    race: ''
  });

  const [prediction, setPrediction] = useState<number | null>(null);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);

  const handleInputChange = (field: string, value: string) => {
    setFormData(prev => ({
      ...prev,
      [field]: value
    }));
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoading(true);
    setError(null);
    
    try {
      // This would typically connect to your backend API
      // For demo purposes, we'll simulate a prediction
      const simulatedPrediction = Math.floor(Math.random() * 100000) + 50000;
      setPrediction(simulatedPrediction);
      
      // In a real implementation, you would call your backend API:
      /*
      const response = await fetch('http://your-backend-api/predict', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(formData),
      });
      
      const result = await response.json();
      setPrediction(result.predicted_salary);
      */
    } catch (err) {
      setError('Failed to get prediction. Please try again.');
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="min-h-screen bg-background p-4 md:p-8">
      <div className="max-w-4xl mx-auto">
        <Card className="mb-8">
          <CardHeader className="text-center">
            <CardTitle className="text-3xl font-bold text-primary">
              Employee Salary Predictor
            </CardTitle>
            <CardDescription className="text-lg text-muted-foreground">
              Predict employee salaries based on various factors using machine learning
            </CardDescription>
          </CardHeader>
        </Card>

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
          {/* Input Form */}
          <Card>
            <CardHeader>
              <CardTitle>Employee Information</CardTitle>
              <CardDescription>
                Enter the employee details to predict their salary
              </CardDescription>
            </CardHeader>
            <CardContent>
              <form onSubmit={handleSubmit} className="space-y-6">
                <div className="space-y-2">
                  <Label htmlFor="age">Age</Label>
                  <Input
                    id="age"
                    type="number"
                    placeholder="Enter age"
                    value={formData.age}
                    onChange={(e) => handleInputChange('age', e.target.value)}
                    required
                  />
                </div>

                <div className="space-y-2">
                  <Label htmlFor="gender">Gender</Label>
                  <Select
                    value={formData.gender}
                    onValueChange={(value) => handleInputChange('gender', value)}
                  >
                    <SelectTrigger>
                      <SelectValue placeholder="Select gender" />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="Male">Male</SelectItem>
                      <SelectItem value="Female">Female</SelectItem>
                      <SelectItem value="Other">Other</SelectItem>
                    </SelectContent>
                  </Select>
                </div>

                <div className="space-y-2">
                  <Label htmlFor="education">Education Level</Label>
                  <Select
                    value={formData.education_level}
                    onValueChange={(value) => handleInputChange('education_level', value)}
                  >
                    <SelectTrigger>
                      <SelectValue placeholder="Select education level" />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="High School">High School</SelectItem>
                      <SelectItem value="Bachelor's">Bachelor's Degree</SelectItem>
                      <SelectItem value="Master's">Master's Degree</SelectItem>
                      <SelectItem value="PhD">PhD</SelectItem>
                    </SelectContent>
                  </Select>
                </div>

                <div className="space-y-2">
                  <Label htmlFor="jobTitle">Job Title</Label>
                  <Input
                    id="jobTitle"
                    type="text"
                    placeholder="Enter job title"
                    value={formData.job_title}
                    onChange={(e) => handleInputChange('job_title', e.target.value)}
                    required
                  />
                </div>

                <div className="space-y-2">
                  <Label htmlFor="experience">Years of Experience</Label>
                  <Input
                    id="experience"
                    type="number"
                    placeholder="Enter years of experience"
                    value={formData.years_of_experience}
                    onChange={(e) => handleInputChange('years_of_experience', e.target.value)}
                    required
                  />
                </div>

                <div className="space-y-2">
                  <Label htmlFor="country">Country</Label>
                  <Input
                    id="country"
                    type="text"
                    placeholder="Enter country"
                    value={formData.country}
                    onChange={(e) => handleInputChange('country', e.target.value)}
                    required
                  />
                </div>

                <div className="space-y-2">
                  <Label htmlFor="race">Race/Ethnicity</Label>
                  <Input
                    id="race"
                    type="text"
                    placeholder="Enter race/ethnicity"
                    value={formData.race}
                    onChange={(e) => handleInputChange('race', e.target.value)}
                  />
                </div>

                <Button 
                  type="submit" 
                  className="w-full" 
                  disabled={loading}
                >
                  {loading ? 'Predicting...' : 'Predict Salary'}
                </Button>
              </form>
            </CardContent>
          </Card>

          {/* Results Section */}
          <Card>
            <CardHeader>
              <CardTitle>Prediction Results</CardTitle>
              <CardDescription>
                Estimated salary based on the provided information
              </CardDescription>
            </CardHeader>
            <CardContent>
              {error && (
                <div className="p-4 mb-4 text-destructive bg-destructive/10 rounded-lg">
                  {error}
                </div>
              )}
              
              {prediction !== null ? (
                <div className="text-center space-y-4">
                  <div className="text-4xl font-bold text-primary">
                    ${prediction.toLocaleString()}
                  </div>
                  <p className="text-muted-foreground">
                    Estimated annual salary
                  </p>
                  <div className="p-4 bg-muted rounded-lg">
                    <h4 className="font-semibold mb-2">Input Summary:</h4>
                    <div className="text-sm space-y-1">
                      <p>Age: {formData.age}</p>
                      <p>Gender: {formData.gender}</p>
                      <p>Education: {formData.education_level}</p>
                      <p>Job Title: {formData.job_title}</p>
                      <p>Experience: {formData.years_of_experience} years</p>
                      <p>Country: {formData.country}</p>
                      <p>Race: {formData.race}</p>
                    </div>
                  </div>
                </div>
              ) : (
                <div className="text-center text-muted-foreground py-8">
                  <img 
                    src="https://placeholder-image-service.onrender.com/image/300x200?prompt=Data analysis and salary prediction dashboard with charts and graphs&id=salary-prediction-placeholder" 
                    alt="Salary prediction dashboard with analytical charts and data visualization elements"
                    className="mx-auto mb-4 rounded-lg"
                  />
                  <p>Enter employee details and click "Predict Salary" to see the estimated salary prediction.</p>
                </div>
              )}
            </CardContent>
          </Card>
        </div>

        {/* Information Section */}
        <Card className="mt-8">
          <CardHeader>
            <CardTitle>About This Predictor</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div>
                <h4 className="font-semibold mb-2">How It Works</h4>
                <p className="text-muted-foreground">
                  This application uses machine learning models trained on employee data to predict 
                  salaries based on various factors including experience, education, and demographic 
                  information.
                </p>
              </div>
              <div>
                <h4 className="font-semibold mb-2">Features Used</h4>
                <ul className="text-muted-foreground list-disc list-inside space-y-1">
                  <li>Age and years of experience</li>
                  <li>Education level and job title</li>
                  <li>Geographic location</li>
                  <li>Demographic factors</li>
                  <li>Multiple machine learning algorithms</li>
                </ul>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
};

export default EmployeeSalaryPredictionApp;
